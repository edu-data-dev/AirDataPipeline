# ================================================================================================
# DOCKER COMPOSE PARA AIRFLOW 2.9.2 (VERSÃO CORRIGIDA E LIMPA)
# ================================================================================================

x-airflow-common: &airflow-common
  # Esta é a instrução correta que será herdada por todos os serviços abaixo.
  build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__FERNET_KEY: 'FBac33GYD_T8pBwB84M2I4t2v0iTThV_1zV1gB22U3k='
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__AUTHENTICATE: 'true'
    AIRFLOW__WWW_USER_CREATE: 'true'
    AIRFLOW__WWW_USER_USERNAME: 'admin'
    AIRFLOW__WWW_USER_PASSWORD: 'admin'
    AIRFLOW__WWW_USER_ROLE: 'Admin'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
    - ./data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # Container que inicializa o banco de dados e depois finaliza
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    command:
      - bash
      - -c
      - airflow db upgrade && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler
    healthcheck:
      test:
        - CMD-SHELL
        - airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  postgres_data: